
@{
    ViewBag.Title = "BootTable";
    //Layout = null;
}


<link href="~/Content/css/bootstrap.css" rel="stylesheet" />

<link href="~/Scripts/bootstrap-table/bootstrap-table.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-table/bootstrap-table.js"></script>

<script src="~/Scripts/bootstrap-table/locale/bootstrap-table-zh-CN.js"></script>

<div class="panel-body" style="padding-bottom:0px;">
    <div class="panel panel-default">
        <div class="panel-heading">查询条件</div>
        <div class="panel-body">
            <form id="formSearch" class="form-horizontal">
                <div class="form-group" style="margin-top:15px">
                    <label class="control-label col-sm-1" for="txt_uname">姓名</label>
                    <div class="col-sm-3">
                        <input type="text" class="form-control" id="txt_uname">
                    </div>
                    <label class="control-label col-sm-1" for="txt_status">状态</label>
                    <div class="col-sm-3">
                        @Html.DropDownList("Status", ViewData["selectList"] as List<SelectListItem>, new { @class = "form-control", onchange = "Searchs()" })
                    </div>
                    <div class="col-sm-4" style="text-align:left;">
                        <button type="button" style="margin-left:50px" id="btn_query" class="btn btn-success"><i class="glyphicon glyphicon-search icon-search"></i>&nbsp;&nbsp; 查询</button>
                        <button type="button" style="margin-left:50px" id="btn_clear" class="btn btn-danger"><i class="glyphicon glyphicon-remove icon-remove"></i>&nbsp;&nbsp; 清空</button>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <div id="toolbar" class="btn-group">
        <button id="btn_add" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>新增
        </button>
        <button id="btn_edit" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>修改
        </button>
        <button id="btn_delete" type="button" class="btn btn-default">
            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>删除
        </button>
    </div>
    <table id="tb_user"></table>
</div>

@section scripts{
    <script type="text/javascript">
        $(function () {

            //1.初始化Table
            var oTable = new TableInit();
            oTable.Init();

            //2.初始化Button的点击事件
            var oButtonInit = new ButtonInit();
            oButtonInit.Init();


        });


        var TableInit = function () {
            var oTableInit = new Object();
            //初始化Table
            oTableInit.Init = function () {
                $('#tb_user').bootstrapTable({
                    url: '/Student/GetStudentByCondition',         //请求后台的URL（*）
                    method: 'post',                     //请求方式（*）
                    toolbar: '#toolbar',                //工具按钮用哪个容器
                    striped: true,                      //是否显示行间隔色
                    cache: false,                       //是否使用缓存，默认为true，所以一般情况下需要设置一下这个属性（*）
                    pagination: true,                   //是否显示分页（*）
                    sortable: true,                     //是否启用排序
                    sortName: "s_loginName",
                    sortOrder: "asc",                   //排序方式
                    queryParams: oTableInit.queryParams,//传递参数（*）
                    sidePagination: "server",           //分页方式：client客户端分页，server服务端分页（*）
                    pageNumber: 1,                      //初始化加载第一页，默认第一页
                    pageSize: 10,                       //每页的记录行数（*）
                    pageList: [10, 25, 50, 100],      //可供选择的每页的行数（*）
                    search: true,                       //是否显示表格搜索，此搜索是客户端搜索，不会进服务端，所以，个人感觉意义不大
                    strictSearch: true,
                    showColumns: true,                  //是否显示所有的列
                    showRefresh: true,                  //是否显示刷新按钮
                    minimumCountColumns: 2,             //最少允许的列数
                    clickToSelect: true,                //是否启用点击选中行
                    height: 500,                        //行高，如果没有设置height属性，表格自动根据记录条数觉得表格高度
                    uniqueId: "s_id",                   //每一行的唯一标识，一般为主键列
                    idField: "s_id",                      //主键列
                    showToggle: true,                   //是否显示详细视图和列表视图的切换按钮
                    cardView: false,                    //是否显示详细视图
                    detailView: false,                  //是否显示父子表
                    buttonsAlign: 'right',               //搜索框 刷新 视图切换工具栏位置
                    showPaginationSwitch: true,         //是否显示切换分页按钮
                    detailView: true,                   //展开详情
                    detailFormatter(index, row) {
                        var d = '';
                        d += "<p>姓名：" + row.s_name + "</p>";
                        d += "<p>登录名：" + row.s_loginName + "</p>";
                        d += "<p>地址：" + row.s_address + "</p>";
                        d += "<p>年纪：" + row.s_age + "</p>";
                        return d;
                    },
                    columns: [{
                        checkbox: true
                    }, {
                        field: 's_name',
                        title: '姓名',
                        titleTooltip: '姓名'
                    }, {
                        field: 's_loginName',
                        title: '登录名',
                        titleTooltip: '登录名',
                        sortable: true
                    }, {
                        field: 's_address',
                        title: '地址',
                        titleTooltip: '地址',
                        sortable: true
                    }, {
                        field: 's_status',
                        title: '状态',
                        titleTooltip: '状态',
                        sortable: true,
                        formatter: function (value, rows, index) {
                            if (value == "1") {
                                return "<span style='color:green;'>启用</span>";
                            } else {
                                return "<span style='color:red;'>禁用</span>";
                            }
                        }
                    }, {
                        field: 'operate',
                        title: '操作',
                        switchable: false,
                        formatter: function (value, rows, index) //自定义方法，添加操作按钮
                        {
                            var d = '';
                            d += "<a target='_blank' href='Edit/" + rows.s_id + "' class='btn btn-info btn-xs'>编辑</a>"
                            return d;
                        }
                    },],
                    onLoadSuccess: function () {
                    },
                    //onLoadError: function () {
                    //    hhl.notify.error("数据加载失败！");
                    //},
                    onDblClickRow: function (row, $element) {
                        var id = row.ID;

                    }, onSearch: function (text) {
                        //自带搜索
                        Searchs();
                    }, //注册加载子表的事件。注意下这里的三个参数！
                    onExpandRow: function (index, row, $detail) {
                        oTableInit.InitSubTable(index, row, $detail);
                    }
                });
            };

            //得到查询的参数
            oTableInit.queryParams = function (params) {

                var temp = {   //这里的键的名字和控制器的变量名必须一直，这边改动，控制器也需要改成一样的
                    page: params.offset + 1,  //页码
                    pageSize: params.limit,   //页面大小
                    sortName: params.sort + "-" + params.order,
                    searchs: GetSearchs(),
                    search: params.search
                };
                return temp;
            };


            oTableInit.InitSubTable = function (index, row, $detail) {

            }

            return oTableInit;
        };



        //按钮功能
        var ButtonInit = function () {
            var oInit = new Object();
            var postdata = {};

            oInit.Init = function () {
                //初始化页面上面的按钮事件

                //点击查询/搜索
                $("#btn_query").on("click", function () {
                    Searchs();
                });

                //清空条件
                $("#btn_clear").click(function () {
                    $("#txt_uname").val("");
                    $("#Status").val("-1");
                    Searchs();
                });

                //点击添加
                $("#btn_add").on("click", function () {
                    alert("添加功能测试");
                });

                //点击删除
                $("#btn_delete").on("click", function () {
                    alert("删除功能测试");
                });


                //点击编辑
                $("#btn_edit").on("click", function () {
                    //alert("编辑事件");
                    var chk = $("input[name='btSelectItem']:checked");
                    var chkVal = [];
                    chk.each(function (index) {
                        chkVal.push($(this).parents("tr").data("uniqueid"));
                    });
                    debugger
                    if (chkVal.length > 1) {
                        alert("不能同时选择多个用户进行编辑");
                        return
                    } else if (chkVal.length == 1) {
                        var selVal = chkVal.join(',');
                        window.open('/Student/Edit/' + selVal);

                    } else if (chkVal.length == 0) {
                        alert("请选择用户 进行编辑");
                        return
                    }
                });
            };

            return oInit;
        };

        //搜索条件
        var GetSearchs = function () {
            var searchs = [];
            searchs.push({ property: "s_name/s_loginName", value: $("#txt_uname").val(), method: "Contains" })
            searchs.push({ property: "s_status", value: $("#Status").val(), method: "==" })
            return searchs;
        };


        //搜索功能方法
        var Searchs = function () {
            var oTable1 = new TableInit();
            var param = oTable1.queryParams;
            // 刷新表格
            $('#tb_user').bootstrapTable('refresh', param);
        }
    </script>
}